name: Sync

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

concurrency:
  group: sync

jobs:
  export:
    runs-on: ubuntu-24.04

    outputs:
      pushed: ${{ steps.commit.outputs.committed }}

    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Checkout data branch
        uses: actions/checkout@v4
        with:
          ref: "data"
          path: "data"
          fetch-depth: 0

      - name: Restore git mtimes
        run: |
          curl https://raw.githubusercontent.com/MestreLion/git-tools/669837eb02f78a75ed250c5d670d9bd7bfc5a51b/git-restore-mtime | python3 -
        working-directory: data/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync

      - name: Export data
        run: |
          uv run trakt-data export --output-dir data/
        env:
          TRAKT_CLIENT_ID: ${{ secrets.TRAKT_CLIENT_ID }}
          TRAKT_ACCESS_TOKEN: ${{ secrets.TRAKT_ACCESS_TOKEN }}
          XDG_CACHE_HOME: .cache/ # TODO: Remove this

      - name: Commit changes
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          if git commit --message "Update data"; then
              echo "committed=true" >>"$GITHUB_OUTPUT"
          else
              echo "committed=false" >>"$GITHUB_OUTPUT"
          fi
        working-directory: data/

      - name: Push changes
        if: steps.commit.outputs.committed == 'true'
        run: git push origin refs/heads/data
        working-directory: data/

  metrics:
    needs: export
    runs-on: ubuntu-24.04

    outputs:
      deployed-checksum: ${{ steps.deployed-checksum.outputs.checksum }}
      artifact-checksum: ${{ steps.artifact-checksum.outputs.checksum }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Checkout data branch
        uses: actions/checkout@v4
        with:
          ref: "data"
          path: "data"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync

      - name: Load cache
        uses: actions/cache@v4
        with:
          path: .cache/
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache-

      - name: Export metrics
        run: |
          uv run trakt-data metrics --output-dir data/
        env:
          TRAKT_CLIENT_ID: ${{ secrets.TRAKT_CLIENT_ID }}
          TRAKT_ACCESS_TOKEN: ${{ secrets.TRAKT_ACCESS_TOKEN }}
          XDG_CACHE_HOME: .cache/

      - name: Fetch deployed checksum
        id: deployed-checksum
        run: |
          curl --silent https://josh.github.io/trakt-data/.checksum | tee "$RUNNER_TEMP/checksum"
          (echo -n "checksum=" ; head -n1 "$RUNNER_TEMP/checksum") >>"$GITHUB_OUTPUT"

      - name: Compute checksum
        id: artifact-checksum
        run: |
          find . -type f -not -path '*/\.*' -print0 | sort -z | xargs -0 sha256sum | sha256sum | awk '{print $1}' | tee "$RUNNER_TEMP/checksum"
          (echo -n "checksum=" ; cat "$RUNNER_TEMP/checksum") >>"$GITHUB_OUTPUT"
          mv "$RUNNER_TEMP/checksum" .checksum
        working-directory: data/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: data/

  deploy:
    needs: metrics
    if: ${{ needs.metrics.outputs.deployed-checksum != needs.metrics.outputs.artifact-checksum }}

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-24.04

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
