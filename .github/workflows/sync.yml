name: Sync

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

concurrency:
  group: sync

jobs:
  run:
    runs-on: ubuntu-24.04

    outputs:
      pushed: ${{ steps.commit.outputs.committed }}

    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Checkout data branch
        uses: actions/checkout@v4
        with:
          ref: "data"
          path: "data"

      - name: Restore git mtimes
        run: |
          git ls-files -z | while IFS= read -r -d '' path; do
            if [ -f "$path" ]; then
              commit_date=$(git log -1 --format="%ad" --date=raw -- "$path" | cut -d' ' -f1)
              touch -d "@$commit_date" "$path"
            fi
          done
        working-directory: data/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync

      - name: Sync
        run: |
          uv run trakt-data --output-dir data/
        env:
          TRAKT_CLIENT_ID: ${{ secrets.TRAKT_CLIENT_ID }}
          TRAKT_ACCESS_TOKEN: ${{ secrets.TRAKT_ACCESS_TOKEN }}

      - name: Commit changes
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          if git commit --message "Update data"; then
              echo "committed=true" >>"$GITHUB_OUTPUT"
          else
              echo "committed=false" >>"$GITHUB_OUTPUT"
          fi
        working-directory: data/

      - name: Push changes
        if: steps.commit.outputs.committed == 'true'
        run: git push origin refs/heads/data
        working-directory: data/

      - name: Upload artifact
        if: steps.commit.outputs.committed == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: data/

  deploy:
    needs: run
    if: ${{ needs.run.outputs.pushed == 'true' }}

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-24.04

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
